{"ast":null,"code":"import { HttpService } from './http.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AppComponent_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r4.username, \" - \", user_r4.email, \"\");\n  }\n}\n\nfunction AppComponent_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r5.username, \" - \", user_r5.email, \"\");\n  }\n}\n\nexport class AppComponent {\n  constructor(httpService) {\n    this.httpService = httpService;\n    this.title = 'AngularHttp';\n    this.users = [];\n  }\n\n  onSubmit(username, email) {\n    this.httpService.sendData({\n      username,\n      email\n    }).subscribe(data => console.log(data), error => console.log(error));\n  }\n\n  onGetData() {\n    this.httpService.getData().subscribe(data => this.users = data);\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  features: [i0.ɵɵProvidersFeature([HttpService])],\n  decls: 23,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\"], [\"username\", \"\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\"], [\"email\", \"\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"Http\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4, 5);\n      i0.ɵɵelementStart(9, \"label\", 6);\n      i0.ɵɵtext(10, \"E-Mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7, 8);\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_13_listener() {\n        i0.ɵɵrestoreView(_r6);\n\n        const _r0 = i0.ɵɵreference(8);\n\n        const _r1 = i0.ɵɵreference(12);\n\n        return ctx.onSubmit(_r0.value, _r1.value);\n      });\n      i0.ɵɵtext(14, \"Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"hr\");\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_16_listener() {\n        return ctx.onGetData();\n      });\n      i0.ɵɵtext(17, \"Get\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ul\");\n      i0.ɵɵtemplate(19, AppComponent_li_19_Template, 2, 2, \"li\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"hr\");\n      i0.ɵɵelementStart(21, \"ul\");\n      i0.ɵɵtemplate(22, AppComponent_li_22_Template, 2, 2, \"li\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.asyncUsers);\n    }\n  },\n  directives: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/home/robin/dev/AngularHttp/src/app/app.component.ts","/home/robin/dev/AngularHttp/src/app/app.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [HttpService]\n})\nexport class AppComponent {\n  title = 'AngularHttp';\n  users: any = [];\n\n  constructor(private httpService: HttpService){\n\n  }\n\n  onSubmit(username: string, email: string){\n    this.httpService.sendData({username, email})\n    .subscribe(data => console.log(data), error => console.log(error));\n  }\n\n  onGetData(){\n    this.httpService.getData().subscribe(data => this.users = data);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <h1>Http</h1>\n      <label for=\"username\">Username</label>\n      <input type=\"text\" id=\"username\" #username>\n      <label for=\"email\">E-Mail</label>\n      <input type=\"text\" id=\"email\" #email>\n      <button (click)=\"onSubmit(username.value, email.value)\">Post</button>\n      <hr>\n      <button (click)=\"onGetData()\">Get</button>\n      <ul>\n        <li *ngFor=\"let user of users\">{{ user.username }} - {{ user.email }}</li>\n      </ul>\n      <hr>\n      <ul>\n        <li *ngFor=\"let user of asyncUsers\">{{ user.username }} - {{ user.email }}</li>\n      </ul>\n    </div>\n  </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}